class Stack:
    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        if not self.is_empty():
            return self.items.pop()
        return "Stack is empty!"

    def peek(self):
        if not self.is_empty():
            return self.items[-1]
        return "Stack is empty!"

    def is_empty(self):
        return len(self.items) == 0

    def size(self):
        return len(self.items)


class Queue:
    def __init__(self):
        self.items = []

    def enqueue(self, item):
        self.items.append(item)

    def dequeue(self):
        if not self.is_empty():
            return self.items.pop(0)
        return "Queue is empty!"

    def peek(self):
        if not self.is_empty():
            return self.items[0]
        return "Queue is empty!"

    def is_empty(self):
        return len(self.items) == 0

    def size(self):
        return len(self.items)

if __name__ == "__main__":

    stack = Stack()
    stack.push(1)
    stack.push(2)
    stack.push(3)
    print("Stack pop:", stack.pop())  # Output: 3
    print("Stack peek:", stack.peek())  # Output: 2
    print("Stack size:", stack.size())  # Output: 2

    queue = Queue()
    queue.enqueue(1)
    queue.enqueue(2)
    queue.enqueue(3)
    print("Queue dequeue:", queue.dequeue())  # Output: 1
    print("Queue peek:", queue.peek())  # Output: 2
    print("Queue size:", queue.size())  # Output: 2
